"use client";import{useState,useEffect}from"react";import useIsBrowser from"../../useIsBrowser";const yesValues=["oui","Oui","yes","Yes","true","True"];const noValues=["non","Non","no","No","false","False"];const useGetLocalStorageState=(key:string,initialValue:boolean|null)=>{const isBrowser=useIsBrowser();const[value,setValue]=useState<boolean|null>(null);useEffect(()=>{if(isBrowser){const storedValue=localStorage.getItem(key);let newValue:boolean|null=initialValue;if(yesValues.includes(storedValue??"")){newValue=true}else if(noValues.includes(storedValue??"")){newValue=false}
setValue(newValue)}},[isBrowser,key,initialValue]);return value??initialValue};const useSetLocalStorageState=(key:string,value:boolean|null|undefined)=>{const isBrowser=useIsBrowser();useEffect(()=>{if(isBrowser){if(value===null||value===undefined){localStorage.removeItem(key);return}if(typeof value!=="boolean"){console.error(`Erreur : la valeur passée pour la clé "${key}" doit être de type boolean, mais elle est de type ${typeof value}.`);return}localStorage.setItem(key,value?"Oui":"Non")}},[isBrowser,key,value])};const useLocalStorageBoolean=(key:string,initialValue:boolean|null)=>{const storedValue=useGetLocalStorageState(key,initialValue);const[state,setState]=useState<boolean|null>(null);useEffect(()=>{if(storedValue!==null){setState(storedValue)}else{setState(initialValue)}},[storedValue,initialValue]);useSetLocalStorageState(key,state);return[state,setState]as const};export default useLocalStorageBoolean;